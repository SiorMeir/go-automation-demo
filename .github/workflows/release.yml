name: Semantic Release

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
    types: [opened, synchronize, reopened, closed]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.4'
          cache: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/exec

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Build and test
        run: |
          go mod tidy
          go build -o bin/server main.go
          go test ./...

      - name: Create Release Assets
        if: success()
        run: |
          mkdir -p release
          cp bin/server release/
          cp data.json release/
          cp README.md release/
          cp CHANGELOG.md release/
          tar -czf release/go-automation-demo.tar.gz -C release .
          zip -r release/go-automation-demo.zip release/

      - name: Upload Release Assets
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: release/
          retention-days: 30
